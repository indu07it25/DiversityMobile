<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ include file="ReactiveModel.ttinclude" #>
<#@ import namespace="System" #>
<#
   
#>

using System;
using System.Linq;
using ReactiveUI;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using DiversityPhone.Interface;

namespace DiversityPhone.Model
{	
	[Table]
	public class IdentificationUnitAnalysis : ReactiveObject, IModifyable, IWriteableEntity
	{
#pragma warning disable 0169
		[Column(IsVersion = true)]
		private Binary version;
#pragma warning restore 0169

<# Row("int?", "IdentificationUnitAnalysisID", RowKind.Key); #>  

<# Row("int", "UnitID"); #>   
<# Row("int", "AnalysisID"); #> 

<# Row("string", "AnalysisResult"); #>

<# Row("DateTime", "AnalysisDate"); #>

<# Row("ModificationState", "ModificationState"); #>

        public IdentificationUnitAnalysis()
        {            
            this.AnalysisDate = DateTime.Now;                      
        }

		public int? EntityID
		{
			get { return IdentificationUnitAnalysisID; }
			set { IdentificationUnitAnalysisID = value; }
		}
    }
}
 
