<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ include file="ReactiveModel.ttinclude" #>
<#@ import namespace="System" #>

using DiversityPhone.Interface;
using ReactiveUI;
using System;
using System.Linq;
using System.Data.Linq;
using System.Data.Linq.Mapping;

namespace DiversityPhone.Model
{
    [Table]
    public class MultimediaObject : ReactiveObject, IEquatable<MultimediaObject>, IModifyable, IWriteableEntity
    {
#pragma warning disable 0169
		[Column(IsVersion = true)]
		private Binary version;
#pragma warning restore 0169

<# Row("int?", "MMOID", RowKind.Key); #>   
<# Row("DBObjectType", "OwnerType"); #>   
<# Row("int", "RelatedId"); #>    
<# Row("string", "Uri"); #>

<# Row("MediaType", "MediaType"); #>    

<# Row("ModificationState", "ModificationState"); #>

<# Row("DateTime", "TimeStamp"); #>

		[Column]
		private string CollectionUri { get; set; }
		
		
		public Uri CollectionURI
		{
			get {
				if(!string.IsNullOrWhiteSpace(CollectionUri))
					return new Uri(CollectionUri, UriKind.RelativeOrAbsolute);
				else
					return null;
			}
			set 
			{


                if (CollectionUri != value.ToString())
				{
					this.raisePropertyChanging("CollectionURI");
					this.raisePropertyChanging("CollectionUri");
					CollectionUri = value.ToString();
					this.raisePropertyChanged("CollectionURI");
					this.raisePropertyChanged("CollectionUri");
				}  
			}
		}

        public override int GetHashCode()
        {
            return MMOID.GetHashCode() ^
                OwnerType.GetHashCode() ^
                RelatedId.GetHashCode() ^
                (Uri ?? "").GetHashCode() ^
                MediaType.GetHashCode();
        }

		public MultimediaObject()
		{
			TimeStamp = DateTime.Now;
		}
        
        public bool Equals(MultimediaObject other)
        {
            return base.Equals(other) ||
               (this.MediaType == other.MediaType &&
                this.MMOID == other.MMOID &&
                this.OwnerType == other.OwnerType &&
                this.RelatedId == other.RelatedId &&
                this.Uri == other.Uri &&                
                this.ModificationState == other.ModificationState);
        }

		public int? EntityID
		{
			get { return MMOID; }
			set { MMOID = value; }
		}
    }
}
 
